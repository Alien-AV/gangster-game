name: PR Preview

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create PR preview folder
        run: |
          mkdir -p pr-preview/pr-${{ github.event.number }}
          rsync -av --exclude=pr-preview --exclude=.git --exclude=.github ./ pr-preview/pr-${{ github.event.number }}/
          touch pr-preview/.nojekyll

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./pr-preview
          publish_branch: gh-pages
          keep_files: true

      - name: Output preview URL
        env:
          PR_NUMBER: ${{ github.event.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "Preview URL: https://${REPO_OWNER}.github.io/${REPO_NAME}/pr-${PR_NUMBER}/"

      - name: Comment with preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request.number;
            const pages = await github.rest.repos.getPages({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const base = pages.data.html_url.replace(/\/$/, '');
            const url  = `${base}/pr-${pr}/`;
            github.rest.issues.createComment({
              issue_number: pr,
              owner:        context.repo.owner,
              repo:         context.repo.repo,
              body:         `ðŸ“¦ Preview available: [View it here](${url})`
            });
